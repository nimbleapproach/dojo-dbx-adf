{
	"name": "DF_CLOUD_DISTRIBUTION_EXEL_LOAD",
	"properties": {
		"folder": {
			"name": "CLOUD_DISTRIBUTION"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_EXCEL_CLOUD_DISTRIBUTION",
						"type": "DatasetReference"
					},
					"name": "GetExcelFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_ADLS",
						"type": "LinkedServiceReference"
					},
					"name": "WriteDeltaFiles"
				}
			],
			"transformations": [
				{
					"name": "AddSystemColumns"
				},
				{
					"name": "RenameColumns"
				},
				{
					"name": "Partition"
				}
			],
			"udfLibraries": [
				{
					"referenceName": "General",
					"type": "DataFlowReference"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Entity as string,",
				"          {Invoice Date} as date,",
				"          {Sales Order} as integer,",
				"          {Invoice Number} as string,",
				"          {Item ID} as integer,",
				"          SKU as string,",
				"          {Customer Name} as string,",
				"          Qty as short,",
				"          {Revenue Local} as double,",
				"          {Cost Local} as double,",
				"          {Adjustment Local} as boolean,",
				"          Currency as string,",
				"          {Margin Local} as double,",
				"          {Exchange Rate} as double,",
				"          {Revenue GBP} as double,",
				"          {Cost GBP} as double,",
				"          {Margin GBP} as double,",
				"          {Vendor ID} as string,",
				"          {Vendor Name} as string,",
				"          {Account Manager} as string,",
				"          {Order Type} as string,",
				"          {Quote ID} as integer,",
				"          {Customer Account} as string,",
				"          {SKU Description} as string,",
				"          {Customer Reference} as string,",
				"          {Item Type} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     moveFiles: ['cloud_distribution/pending','cloud_distribution/archived'],",
				"     rowUrlColumn: 'Sys_FileName') ~> GetExcelFile",
				"RenameColumns derive(Sys_Bronze_InsertDateTime_UTC = currentUTC()) ~> AddSystemColumns",
				"Partition select(mapColumn(",
				"          each(match(true()),",
				"               applyParquetNaming($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"GetExcelFile window(over({Invoice Number}),",
				"     asc({Item ID}, true),",
				"     asc(SKU, true),",
				"     LineNo = rowNumber()) ~> Partition",
				"AddSystemColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Entity as string,",
				"          InvoiceDate as string,",
				"          SalesOrder as string,",
				"          InvoiceNumber as string,",
				"          ItemID as string,",
				"          SKU as string,",
				"          CustomerName as string,",
				"          Qty as string,",
				"          RevenueLocal as string,",
				"          CostLocal as string,",
				"          AdjustmentLocal as string,",
				"          Currency as string,",
				"          MarginLocal as string,",
				"          ExchangeRate as string,",
				"          RevenueGBP as string,",
				"          CostGBP as string,",
				"          MarginGBP as string,",
				"          VendorID as string,",
				"          VendorName as string,",
				"          AccountManager as string,",
				"          OrderType as string,",
				"          QuoteID as string,",
				"          CustomerAccount as string,",
				"          SKUDescription as string,",
				"          CustomerReference as string,",
				"          ItemType as string,",
				"          Sys_FileName as string,",
				"          Sys_ID as string,",
				"          Sys_Bronze_InsertDateTime_UTC as timestamp",
				"     ),",
				"     format: 'delta',",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'bronze',",
				"     folderPath: 'cloud_distribution/invoicedata',",
				"     mergeSchema: true,",
				"     autoCompact: true,",
				"     optimizedWrite: true,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> WriteDeltaFiles"
			]
		}
	}
}