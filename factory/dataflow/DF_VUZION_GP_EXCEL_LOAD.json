{
	"name": "DF_VUZION_GP_EXCEL_LOAD",
	"properties": {
		"folder": {
			"name": "VUZION/GP [Percentage]"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_DV_VUZION_GP_EXCEL",
						"type": "DatasetReference"
					},
					"name": "GetExcelFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_ADLS",
						"type": "LinkedServiceReference"
					},
					"name": "WriteDeltaFiles"
				}
			],
			"transformations": [
				{
					"name": "AddSystemColumns",
					"description": "Creating/updating the columns 'Sys_Bronze_InsertDateTime_UTC'"
				},
				{
					"name": "RenameColumns",
					"description": "Add columns to rename"
				}
			],
			"udfLibraries": [
				{
					"referenceName": "General",
					"type": "DataFlowReference"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pm_FileName as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     moveFiles: ['vuzion/gp/pending','vuzion/gp/archived'],",
				"     rowUrlColumn: 'Sys_FileName') ~> GetExcelFile",
				"GetExcelFile derive(Sys_Bronze_InsertDateTime_UTC = currentUTC()) ~> AddSystemColumns",
				"AddSystemColumns select(mapColumn(",
				"          Sys_FileName,",
				"          Sys_Bronze_InsertDateTime_UTC,",
				"          each(match(true()),",
				"               applyParquetNaming($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"RenameColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'bronze',",
				"     folderPath: 'masterdata/vuzion/vuzion_gp',",
				"     compressionCodec: 'snappy',",
				"     partitionFileNames:[(concat('bronze-vuzion_gp-',$pm_FileName,'-',toString(currentUTC()),'.snappy.parquet')\r",
				")],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> WriteDeltaFiles"
			]
		}
	}
}