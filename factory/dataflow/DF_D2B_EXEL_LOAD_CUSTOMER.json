{
	"name": "DF_D2B_EXEL_LOAD_CUSTOMER",
	"properties": {
		"folder": {
			"name": "D2B"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_EXCEL_D2B_SINGLE_SHEET",
						"type": "DatasetReference"
					},
					"name": "GetExcelFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_ADLS",
						"type": "LinkedServiceReference"
					},
					"name": "WriteDeltaFiles"
				}
			],
			"transformations": [
				{
					"name": "AddSystemColumns"
				},
				{
					"name": "RenameColumns"
				},
				{
					"name": "AddIdColumn"
				},
				{
					"name": "IsNotNull"
				},
				{
					"name": "AddIdColumnIsNotNull"
				},
				{
					"name": "Union"
				}
			],
			"udfLibraries": [
				{
					"referenceName": "General",
					"type": "DataFlowReference"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     moveFiles: ['cloud_distribution/pending','cloud_distribution/archived'],",
				"     rowUrlColumn: 'Sys_FileName') ~> GetExcelFile",
				"RenameColumns derive(Sys_Bronze_InsertDateTime_UTC = currentUTC()) ~> AddSystemColumns",
				"Union select(mapColumn(",
				"          each(match(true()),",
				"               applyParquetNaming($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"IsNotNull@IsNull derive(Sys_ID = sha2(512,concatWS('~', toString(byNames(['EntryNo','CODEREVENDEUR']))))) ~> AddIdColumn",
				"GetExcelFile split(isNull(toString(byName('CUSTOMERCustomerNo'))),",
				"     disjoint: false) ~> IsNotNull@(IsNull, IsNotNull)",
				"IsNotNull@IsNotNull derive(Sys_ID = sha2(512,concatWS('~', toString(byNames(['EntryNo','CUSTOMERCustomerNo']))))) ~> AddIdColumnIsNotNull",
				"AddIdColumn, AddIdColumnIsNotNull union(byName: true)~> Union",
				"AddSystemColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'bronze',",
				"     folderPath: ('d2b/customers'),",
				"     mergeSchema: true,",
				"     autoCompact: true,",
				"     optimizedWrite: true,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> WriteDeltaFiles"
			]
		}
	}
}