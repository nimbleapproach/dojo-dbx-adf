{
	"name": "PL_30_IGSQL03_Load_View",
	"properties": {
		"activities": [
			{
				"name": "If FullLoad",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.pm_FullLoad",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Delta Load Navision View",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SetNewWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "Sys_Bronze_InsertDateTime_UTC",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										},
										{
											"name": "Sys_DatabaseName",
											"value": {
												"value": "@pipeline().parameters.pm_DatabaseName",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "Select * FROM [edw_@{pipeline().globalParameters.gpm_Environment}].[@{pipeline().parameters.pm_ViewName}]\nwhere [Sys_RowNumber] > @{variables('v_Watermark')}\n",
										"type": "Expression"
									},
									"queryTimeout": "01:30:00",
									"isolationLevel": "ReadCommitted",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings",
										"maxRowsPerFile": 1000000,
										"fileNamePrefix": {
											"value": "bronze-igsql03-@{pipeline().parameters.pm_ViewName}-@{pipeline().parameters.pm_DatabaseName}-@{utcNow()}",
											"type": "Expression"
										}
									}
								},
								"enableStaging": false,
								"validateDataConsistency": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": true
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "LS_ADLS",
											"type": "LinkedServiceReference",
											"parameters": {
												"pm_Environment": {
													"value": "@pipeline().globalParameters.gpm_Environment",
													"type": "Expression"
												}
											}
										},
										"path": "logging/adf"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQLDB_NAV_DYNAMIC",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_TableName": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"pm_SchemaName": "edw",
										"pm_DatabaseName": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ADLS_PARQUET",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_FileSystem": "bronze",
										"pm_Directory": {
											"value": "igsql03/@{replace(pipeline().parameters.pm_ViewName,' ','_')}/DatabaseName=@{pipeline().parameters.pm_DatabaseName}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "GetWatermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT [WATERMARK]\n  FROM [adf].[CT_IGSQL03_TABLES]\n  where TABLE_NAME = '@{pipeline().parameters.pm_ViewName}'\n  and DATABASE_NAME = '@{pipeline().parameters.pm_DatabaseName}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_SQLDB_METADATA_DYNAMIC",
									"type": "DatasetReference",
									"parameters": {
										"pm_SchemaName": "adf",
										"pm_TableName": "CT_IGSQL03_TABLES",
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "SetWatermark",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_Watermark",
								"value": {
									"value": "@if(empty(activity('GetWatermark').output.value),'0',activity('GetWatermark').output.value[0].WATERMARK)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "UpdateWatermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Delta Load Navision View",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[adf].[sp_igsql03_tables_watermark_upsert]",
								"storedProcedureParameters": {
									"database_name": {
										"value": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										},
										"type": "String"
									},
									"table_name": {
										"value": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"type": "String"
									},
									"watermark": {
										"value": {
											"value": "@variables('v_NewWatermark')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_METADATA",
								"type": "LinkedServiceReference",
								"parameters": {
									"pm_Environment": {
										"value": "@pipeline().globalParameters.gpm_Environment",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "GetNewWatermark",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "SetWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "Select max([Sys_RowNumber]) as NewWatermark FROM [edw_@{pipeline().globalParameters.gpm_Environment}].[@{pipeline().parameters.pm_ViewName}]\nwhere Sys_RowNumber > @{variables('v_Watermark')} \n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_SQLDB_NAV_DYNAMIC",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_TableName": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"pm_SchemaName": {
											"value": "edw",
											"type": "Expression"
										},
										"pm_DatabaseName": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "SetNewWatermark",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetNewWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_NewWatermark",
								"value": {
									"value": "@string(\n    coalesce(\n        activity('GetNewWatermark').output.value[0].NewWatermark,\n        variables('v_Watermark')\n        )\n    )",
									"type": "Expression"
								}
							}
						},
						{
							"name": "AddLoggingEntryDelta",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Delta Load Navision View",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[adf].[sp_igsql03_logging]",
								"storedProcedureParameters": {
									"database_name": {
										"value": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										},
										"type": "String"
									},
									"table_name": {
										"value": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataread": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.dataRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"datawritten": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.datawritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"fileswritten": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.fileswritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"sourcepeakconnections": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.sourcepeakconnections",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"sinkpeakconnections": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.sinkpeakconnections",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"rowsread": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.rowsread",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"rowscopied": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.rowscopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"copyduration": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.copyduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"throughput": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.throughput",
											"type": "Expression"
										},
										"type": "Decimal"
									},
									"usedparallelcopies": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.usedparallelcopies",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"queuingduration": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.executiondetails[0].detaileddurations.queuingduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"timetofirstbyte": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.executiondetails[0].detaileddurations.timetofirstbyte",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"transferduration": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.executiondetails[0].detaileddurations.transferduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"start": {
										"value": {
											"value": "@activity('Delta Load Navision View').output.executiondetails[0].start",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"full_load": {
										"value": {
											"value": "@pipeline().parameters.pm_FullLoad",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_METADATA",
								"type": "LinkedServiceReference",
								"parameters": {
									"pm_Environment": {
										"value": "@pipeline().globalParameters.gpm_Environment",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Full Load Navision View",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SetNewWatermark_FullLoad",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "Sys_Bronze_InsertDateTime_UTC",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										},
										{
											"name": "Sys_DatabaseName",
											"value": {
												"value": "@pipeline().parameters.pm_DatabaseName",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "Select * FROM  [edw_@{pipeline().globalParameters.gpm_Environment}].[@{pipeline().parameters.pm_ViewName}]\nwhere [Sys_RowNumber] <= '@{variables('v_NewWatermark')}'",
										"type": "Expression"
									},
									"queryTimeout": "01:30:00",
									"isolationLevel": "ReadCommitted",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings",
										"maxRowsPerFile": 1000000,
										"fileNamePrefix": {
											"value": "bronze-igsql03-@{pipeline().parameters.pm_ViewName}-@{pipeline().parameters.pm_DatabaseName}-@{utcNow()}",
											"type": "Expression"
										}
									}
								},
								"enableStaging": false,
								"validateDataConsistency": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": true
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "LS_ADLS",
											"type": "LinkedServiceReference",
											"parameters": {
												"pm_Environment": {
													"value": "@pipeline().globalParameters.gpm_Environment",
													"type": "Expression"
												}
											}
										},
										"path": "logging/adf"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQLDB_NAV_DYNAMIC",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_TableName": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"pm_SchemaName": "edw",
										"pm_DatabaseName": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ADLS_PARQUET",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_FileSystem": "bronze",
										"pm_Directory": {
											"value": "igsql03/@{replace(pipeline().parameters.pm_ViewName,' ','_')}/DatabaseName=@{pipeline().parameters.pm_DatabaseName}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "UpdateWatermark_FullLoad",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Full Load Navision View",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[adf].[sp_igsql03_tables_watermark_upsert]",
								"storedProcedureParameters": {
									"database_name": {
										"value": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										},
										"type": "String"
									},
									"table_name": {
										"value": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"type": "String"
									},
									"watermark": {
										"value": {
											"value": "@variables('v_NewWatermark')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_METADATA",
								"type": "LinkedServiceReference",
								"parameters": {
									"pm_Environment": {
										"value": "@pipeline().globalParameters.gpm_Environment",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "GetNewWatermark_FullLoad",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "Select max([Sys_RowNumber]) as NewWatermark FROM [edw_@{pipeline().globalParameters.gpm_Environment}].[@{pipeline().parameters.pm_ViewName}]\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_SQLDB_NAV_DYNAMIC",
									"type": "DatasetReference",
									"parameters": {
										"pm_Environment": {
											"value": "@pipeline().globalParameters.gpm_Environment",
											"type": "Expression"
										},
										"pm_TableName": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"pm_SchemaName": {
											"value": "edw",
											"type": "Expression"
										},
										"pm_DatabaseName": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "SetNewWatermark_FullLoad",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetNewWatermark_FullLoad",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_NewWatermark",
								"value": {
									"value": "@string(\n    coalesce(\n        activity('GetNewWatermark_FullLoad').output.value[0].NewWatermark,\n        0\n        )\n    )",
									"type": "Expression"
								}
							}
						},
						{
							"name": "AddLoggingEntryFull",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Full Load Navision View",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[adf].[sp_igsql03_logging]",
								"storedProcedureParameters": {
									"database_name": {
										"value": {
											"value": "@pipeline().parameters.pm_DatabaseName",
											"type": "Expression"
										},
										"type": "String"
									},
									"table_name": {
										"value": {
											"value": "@pipeline().parameters.pm_ViewName",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataread": {
										"value": {
											"value": "@activity('Full Load Navision View').output.dataRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"datawritten": {
										"value": {
											"value": "@activity('Full Load Navision View').output.datawritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"fileswritten": {
										"value": {
											"value": "@activity('Full Load Navision View').output.fileswritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"sourcepeakconnections": {
										"value": {
											"value": "@activity('Full Load Navision View').output.sourcepeakconnections",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"sinkpeakconnections": {
										"value": {
											"value": "@activity('Full Load Navision View').output.sinkpeakconnections",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"rowsread": {
										"value": {
											"value": "@activity('Full Load Navision View').output.rowsread",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"rowscopied": {
										"value": {
											"value": "@activity('Full Load Navision View').output.rowscopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"copyduration": {
										"value": {
											"value": "@activity('Full Load Navision View').output.copyduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"throughput": {
										"value": {
											"value": "@activity('Full Load Navision View').output.throughput",
											"type": "Expression"
										},
										"type": "Decimal"
									},
									"usedparallelcopies": {
										"value": {
											"value": "@activity('Full Load Navision View').output.usedparallelcopies",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"queuingduration": {
										"value": {
											"value": "@activity('Full Load Navision View').output.executiondetails[0].detaileddurations.queuingduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"timetofirstbyte": {
										"value": {
											"value": "@activity('Full Load Navision View').output.executiondetails[0].detaileddurations.timetofirstbyte",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"transferduration": {
										"value": {
											"value": "@activity('Full Load Navision View').output.executiondetails[0].detaileddurations.transferduration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"start": {
										"value": {
											"value": "@activity('Full Load Navision View').output.executiondetails[0].start",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"full_load": {
										"value": {
											"value": "@pipeline().parameters.pm_FullLoad",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_METADATA",
								"type": "LinkedServiceReference",
								"parameters": {
									"pm_Environment": {
										"value": "@pipeline().globalParameters.gpm_Environment",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"pm_DatabaseName": {
				"type": "string"
			},
			"pm_ViewName": {
				"type": "string"
			},
			"pm_FullLoad": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"variables": {
			"v_Watermark": {
				"type": "String"
			},
			"v_NewWatermark": {
				"type": "String"
			}
		},
		"folder": {
			"name": "10 Bronze/IGSQL03 [Navision]"
		},
		"annotations": []
	}
}